#! /usr/bin/env node

const path = require('path');
const fs = require('fs');
const dirname = path.resolve(__dirname, '../src/');
const target = require('./target');
const fsStatFile = require('./fs-stat-file');

const statFile = (filePath, callback) => {
  fsStatFile(filePath, (err, stats) => {
    // file does not exist throws ENOENT
    if (err && err.code !== 'ENOENT') {
      throw err;
    }
    // do not overwrite current dotfiles
    if (stats === undefined) {
      callback();
    }
  });
};

const statDir = (filePath, callback) => {
  fs.stat(filePath, (err, stats) => {
    if (!stats.isDirectory()) {
      callback();
    }
  })
};

const writeDotFiles = (filename, content) => {
  const filePath = path.resolve(target, filename);
  statFile(filePath, () => {
    fs.writeFileSync(filePath, content, 'utf8');
  });
};

fs.readdir(dirname, (err, filenames) => {
  if (err) {
    throw err;
  }
  filenames.forEach((filename) => {
    const filePath = path.resolve(dirname, filename);
    statDir(filePath, () => {
      fs.readFile(filePath, 'utf-8', (err, content) => {
        if (err) {
          throw err;
        }
        writeDotFiles(filename, content);
      });
    })
  });
});
